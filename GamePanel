import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;

public class GamePanel extends Info {
	private static final long serialVersionUID = 1L;

	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		Font highFont = new Font(Font.SANS_SERIF, 0, 12);
		g.setFont(highFont);
		
		g.setColor(Color.BLACK);
		g.fillRect(49, 49, 60 + (boardType - 1)*60 - 1, 60 + (boardType - 1)*60 - 1);
		
		for (int i = 0; i < numbers.size(); i++) {
			if(numbers.get(i).getValue() != 0) {
				g.setColor(Color.WHITE);
				g.fillRect(numbers.get(i).getPos().x, numbers.get(i).getPos().y, numbers.get(i).getSize().width, numbers.get(i).getSize().height);
				
				g.setColor(Color.RED);
				g.drawString(" " + numbers.get(i).getValue() + " ", numbers.get(i).getPos().x + 15, numbers.get(i).getPos().y + 30);
			}
		}
		
		try
		{	
			g.setColor(Color.WHITE);
			g.fillRect(80 + boardType * 60, 50, 150, 180);
			g.setColor(Color.BLACK);
			g.drawRect(80 + boardType * 60, 50, 150, 180);
			
			for(int i = 0; i < highscores.size(); i++)
				g.drawString(highscores.get(i), 90 + boardType * 60, 17*(i + 1) + 53);
			
		} catch (Exception error) {
			System.out.println("Cannot find or read high scores file.");
		}
		
		if(gameOver) {
			g.setColor(Color.WHITE);
			g.fillRect(boardType * 30 - 45, boardType * 30 + 15, 190, 50);
			g.setColor(Color.BLACK);
			g.drawRect(boardType * 30 - 45, boardType * 30 + 15, 190, 50);
			g.setColor(Color.RED);
			g.drawString("  You won in " + (time / 1000) + "." + (time / 100 % 10) + " seconds!", boardType * 30 - 35, 30 + boardType * 30);
			g.drawString("If you beat a high score, enter", boardType * 30 - 35, 45 + boardType * 30);
			g.drawString("your name in the bottom right", boardType * 30 - 35, 60 + boardType * 30);
		}
	}
}
