import java.awt.Color;
import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.FileReader;

public class GamePanel extends Info {
	private static final long serialVersionUID = 1L;
	public BufferedReader input;

	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		g.setColor(Color.BLACK);
		g.fillRect(49, 49, 60 + (boardType - 1)*60 - 1, 60 + (boardType - 1)*60 - 1);
		
		for (int i = 0; i < numbers.size(); i++) {
			if(numbers.get(i).getValue() != 0) {
				g.setColor(Color.WHITE);
				g.fillRect(numbers.get(i).getPos().x, numbers.get(i).getPos().y, numbers.get(i).getSize().width, numbers.get(i).getSize().height);
				
				g.setColor(Color.RED);
				g.drawString(" " + numbers.get(i).getValue() + " ", numbers.get(i).getPos().x + 15, numbers.get(i).getPos().y + 30);
			}
		}
		
		try
		{
			if(boardType == 3)
				input = new BufferedReader(new FileReader(high3));
			else if(boardType == 4)
				input = new BufferedReader(new FileReader(high4));
			else
				input = new BufferedReader(new FileReader(high5));
			
			
			g.setColor(Color.WHITE);
			g.fillRect(80 + boardType * 60, 50, 100, 180);
			g.setColor(Color.BLACK);
			g.drawRect(80 + boardType * 60, 50, 100, 180);
			String currentLine = "";
			int tempCounter = 1;
			while ((currentLine = input.readLine()) != null) {
				g.drawString(currentLine, 90 + boardType * 60, 17*tempCounter + 53);
				tempCounter++;
			}
		} catch (Exception error) {
			System.out.println("Cannot find or read high scores file.");
		}
		
		if(gameOver) {
			g.setColor(Color.WHITE);
			g.fillRect(boardType * 30 - 45, boardType * 30 + 25, 180, 40);
			g.setColor(Color.BLACK);
			g.drawRect(boardType * 30 - 45, boardType * 30 + 25, 180, 40);
			g.setColor(Color.RED);
			g.drawString("You won in " + (time / 1000) + "." + (time / 100 % 10) + " seconds!", boardType * 30 - 35, 50 + boardType * 30);
		}
	}
}
